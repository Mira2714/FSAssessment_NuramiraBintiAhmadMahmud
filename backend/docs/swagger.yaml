openapi: 3.0.0
info:
  title: Course API
  version: 1.0.0
  description: A simple API for managing courses

servers:
  - url: http://localhost:3000

paths:
  /api/users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input

  /api/users/instructor:
    get:
      summary: Get list of users filtered by role (e.g., instructor)
      parameters:
        - in: query
          name: role
          schema:
            type: string
            enum: [instructor]
      responses:
        '200':
          description: A list of users with role instructor

  /api/courses:
    get:
      summary: List all courses but with filter by status or instructor
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: instructor_id
          schema:
            type: string
      responses:
        '200':
          description: A list of courses (with filter by status/instructor)
    post:
        summary: Create a course
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        responses:
          '201':
            description: Course created
          '404':
            description: Validation error

  /api/courses/{id}:
    get:
      summary: Get a course by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course found
    put:
      summary: Update a course
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: Course updated
    delete:
      summary: Soft delete a course
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course deleted

components:
  schemas:
    UserInput:
      type: object
      required:
        - id
        - name
        - email
        - password
        - role
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [student, instructor]

    Course:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        instructor_id:
          type: string
        status:
          type: string
        image_url:
          type: string
